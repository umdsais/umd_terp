import { color, spacing } from '../../../../token';
import { image as imageElement } from '../../../asset';
import { create } from '../../../../utilities';
const classNamePrefix = 'umd-element-composite-card-overlay-icon';
const createContainerQuery = (breakpoint, comparison = 'max-width', styles = {}) => {
    return {
        [`@container (${comparison}: ${breakpoint}px)`]: styles,
    };
};
const createImageStyles = (customStyles = {}) => {
    const baseStyles = {
        position: 'absolute',
        top: 0,
        left: 0,
        width: '100%',
        height: '100%',
        ...customStyles,
    };
    return {
        [`.${imageElement.wrapperScaled.className}`]: {
            ...baseStyles,
            '& img': {},
        },
    };
};
const createTextStyles = (customStyles = {}) => {
    return {
        [`& > div:last-child`]: {
            maxWidth: `${spacing.maxWidth.smallest}`,
            height: '100%',
            display: 'flex',
            flexDirection: 'column',
            zIndex: 9,
            position: 'relative',
            ...customStyles,
        },
    };
};
const createContainerStyles = (customStyles = {}) => {
    return {
        padding: `${spacing.md}`,
        height: '100%',
        overflow: 'hidden',
        position: 'relative',
        ...customStyles,
    };
};
export const elementIconContainer = create.jssObject({
    className: `${classNamePrefix}-element-container`,
    display: 'flex',
    justifyContent: 'flex-end',
    marginBottom: `${spacing.lg}`,
    '& *': {
        maxHeight: '120px',
    },
});
const iconContainerBase = {
    padding: `${spacing.md}`,
    paddingTop: `${spacing.sm}`,
};
const iconContainerTextBase = {
    height: 'auto',
};
export const light = create.jssObject({
    className: `${classNamePrefix}-light`,
    ...createContainerStyles({
        backgroundColor: color.gray.lightest,
        ...iconContainerBase,
    }),
    ...createTextStyles({
        ...iconContainerTextBase,
    }),
    ...createImageStyles({}),
});
export const dark = create.jssObject({
    className: `${classNamePrefix}-dark`,
    ...createContainerStyles({
        backgroundColor: color.gray.darker,
        ...iconContainerBase,
    }),
    ...createTextStyles({
        ...iconContainerTextBase,
    }),
    ...createImageStyles({}),
});
//# sourceMappingURL=icon.js.map