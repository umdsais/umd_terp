export declare const reset: {
    '*': {
        margin: string;
        padding: string;
        boxSizing: string;
    };
    body: {
        overscrollBehavior: string;
    };
    'h1, h2, h3, h4, h5, h6': {
        marginBottom: string;
        fontSize: string;
        lineHeight: string;
        fontWeight: string;
    };
    hr: {
        margin: string;
        backgroundColor: "#E6E6E6";
        border: string;
        height: string;
    };
    li: {
        color: "#454545";
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
    };
    date: {
        color: "#000000";
    };
    p: {
        color: "#454545";
        marginBottom: string;
        '&:last-child': {
            marginBottom: string;
        };
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
    };
    address: {
        fontStyle: string;
    };
    label: {
        display: string;
        position: string;
        marginTop: string;
        '&:has(+ input[required]):after': {
            content: string;
            color: "#A90007";
        };
        '&[for]': {
            cursor: string;
        };
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
        fontWeight: string;
    };
    input: {
        [x: string]: any;
        className: string | string[];
    };
    textarea: {
        "&[aria-invalid='true']": {
            border: string;
            '&[aria-errormessage] + [id]': {
                color: "#A90007";
                display: string;
                margin: number;
                marginTop: string;
                fontWeight: number;
                fontSize: string;
                lineHeight: number;
                textTransform: string;
                letterSpacing: string;
            };
        };
        "&[aria-invalid='false']": {
            border: string;
            '& + [id]': {
                display: string;
            };
        };
        backgroundColor: "#FFFFFF";
        border: string;
        color: "#000000";
        cursor: string;
        display: string;
        outlineOffset: string;
        padding: string;
        position: string;
        textOverflow: string;
        transition: string;
        width: string;
        '&::placeholder': {
            color: "#757575";
        };
        '&[readonly]': {
            color: "#757575";
            fontStyle: string;
            cursor: string;
        };
        "&:focus, &:focus-within": {
            borderBottom: string;
        };
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
    };
    select: {
        "&[aria-invalid='true']": {
            border: string;
            '&[aria-errormessage] + [id]': {
                color: "#A90007";
                display: string;
                margin: number;
                marginTop: string;
                fontWeight: number;
                fontSize: string;
                lineHeight: number;
                textTransform: string;
                letterSpacing: string;
            };
        };
        "&[aria-invalid='false']": {
            border: string;
            '& + [id]': {
                display: string;
            };
        };
        '&[multiple]': {
            cursor: string;
            resize: string;
            '& option': {
                padding: string;
                color: "#000000";
                transition: string;
                '&:hover': {
                    color: "#E21833";
                };
                '&:checked': {
                    backgroundColor: "#E6E6E6";
                };
            };
        };
        backgroundColor: "#FFFFFF";
        border: string;
        color: "#000000";
        cursor: string;
        display: string;
        outlineOffset: string;
        padding: string;
        position: string;
        textOverflow: string;
        transition: string;
        width: string;
        '&::placeholder': {
            color: "#757575";
        };
        '&[readonly]': {
            color: "#757575";
            fontStyle: string;
            cursor: string;
        };
        "&:focus, &:focus-within": {
            borderBottom: string;
        };
        fontSize: string;
        lineHeight: string;
        fontFamily: string;
    };
};
export declare const variables: {
    '--serif': string;
    '--sanSerif': string;
};
export declare const root: {
    ':root': {
        'font-family': string;
        'font-size': string;
        'line-height': string;
        '--isMediaSmall': boolean;
        '--isMediaSmallMax': boolean;
        '--isMediaMedium': boolean;
        '--isMediaMediumMax': boolean;
        '--isMediaLarge': boolean;
        '--isMediaLargeMax': boolean;
        '--isMediaTablet': boolean;
        '--isMediaTabletMax': boolean;
        '--isMediaDesktop': boolean;
        '--isMediaDesktopMax': boolean;
        '--isMediaHighDef': boolean;
        '--serif': string;
        '--sanSerif': string;
    };
};
//# sourceMappingURL=root.d.ts.map