import { media, spacing } from '../../token';
import { create } from '../../utilities';
import { base } from './base';
import { startSecond } from './child';
const classNamePrefix = 'umd-layout-grid-gap';
const fourColumnCenteredChild = {
    '& > *:first-child': {
        ...startSecond,
    },
};
const paragraphOverwrite = {
    '& > p:not(:last-child)': {
        marginBottom: 0,
    },
};
export const two = create.jssObject({
    ...base.two,
    [`@media (${media.queries.large.min})`]: {
        gridTemplateColumns: 'repeat(2, 1fr)',
        gridGap: spacing.lg,
        ...paragraphOverwrite,
    },
    [`@media (${media.queries.desktop.min})`]: {
        gridGap: spacing.xl,
    },
    className: [
        `${classNamePrefix}-two`,
        'umd-grid-gap',
    ],
});
export const three = create.jssObject({
    ...base.three,
    [`@media (${media.queries.large.min})`]: {
        gridGap: spacing.lg,
        ...paragraphOverwrite,
    },
    className: [
        `${classNamePrefix}-three`,
        'umd-grid-gap-three',
    ],
});
export const threeLarge = create.jssObject({
    ...base.three,
    [`@media (${media.queries.desktop.min})`]: {
        gridTemplateColumns: 'repeat(3, 1fr)',
        gridGap: spacing.xl,
        ...paragraphOverwrite,
    },
    className: [
        `${classNamePrefix}-three-large`,
        'umd-grid-gap-three-large',
    ],
});
export const four = create.jssObject({
    ...base.four,
    [`@media (${media.queries.large.min})`]: {
        gridGap: spacing.lg,
        ...paragraphOverwrite,
    },
    className: [
        `${classNamePrefix}-four`,
        'umd-grid-gap-four',
    ],
});
export const fourCentered = create.jssObject({
    ...base.four,
    [`@media (${media.queries.large.min})`]: {
        gridGap: spacing.lg,
        ...paragraphOverwrite,
    },
    ...fourColumnCenteredChild,
    className: [
        `${classNamePrefix}-four-centered`,
        'umd-grid-gap-four-center',
    ],
});
export const fourLarge = create.jssObject({
    ...base.four,
    [`@media (${media.queries.highDef.min})`]: {
        gridGap: spacing.xl,
        ...paragraphOverwrite,
    },
    className: [
        `${classNamePrefix}-four-large`,
        'umd-grid-gap-four-large',
    ],
});
export const fourLargeCentered = create.jssObject({
    ...base.four,
    [`@media (${media.queries.highDef.min})`]: {
        gridGap: spacing.xl,
    },
    ...fourColumnCenteredChild,
    className: [
        `${classNamePrefix}-four-large-centered`,
        'umd-grid-gap-four-center',
    ],
});
export const stacked = create.jssObject({
    display: 'grid',
    gridTemplateColumns: '1fr',
    gridGap: `${spacing.md}`,
    [`@media (${media.queries.desktop.min})`]: {
        gridGap: `${spacing.xl}`,
    },
    className: [
        `${classNamePrefix}-stacked`,
        'umd-grid-gap-stacked',
    ],
});
//# sourceMappingURL=gap.js.map