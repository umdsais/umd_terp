import { type SlotName } from './mapping';
import { type BaseProps, type OptionalProps } from './create';
type SlotProps = BaseProps & Partial<OptionalProps>;
declare const _default: {
    readonly actions: {
        readonly default: (props: SlotProps) => HTMLElement | null;
    };
    readonly assets: {
        readonly image: (props: SlotProps) => HTMLElement | null;
    };
    readonly contact: {
        readonly additional: (props: SlotProps) => HTMLElement | null;
        readonly address: (props: SlotProps) => HTMLElement | null;
        readonly email: (props: SlotProps) => HTMLElement | null;
        readonly location: (props: SlotProps) => HTMLElement | null;
        readonly phone: (props: SlotProps) => HTMLElement | null;
    };
    readonly content: {
        readonly default: (props: SlotProps) => HTMLElement | null;
    };
    readonly date: {
        readonly default: (props: SlotProps) => HTMLElement | null;
    };
    readonly deprecated: {
        readonly ADDITIONAL: (props: SlotProps) => HTMLElement | null;
        readonly body: (props: SlotProps) => HTMLElement | null;
        readonly wrappingText: (props: SlotProps) => HTMLElement | null;
        readonly plainText: (props: SlotProps) => HTMLElement | null;
    };
    readonly eyebrow: {
        readonly default: (props: SlotProps) => HTMLElement | null;
    };
    readonly person: {
        readonly association: (props: SlotProps) => HTMLElement | null;
        readonly name: (props: SlotProps) => HTMLElement | null;
        readonly jobTitle: (props: SlotProps) => HTMLElement | null;
        readonly pronouns: (props: SlotProps) => HTMLElement | null;
    };
    readonly name: {
        readonly ADDITIONAL: string;
        readonly ATTRIBUTION_SUB_TEXT: string;
        readonly ATTRIBUTION: string;
        readonly BLOCKS: string;
        readonly BREADCRUMB_COPY: string;
        readonly BREADCRUMB: string;
        readonly CARDS: string;
        readonly CHILDREN_SLIDES: string;
        readonly CTA_ICON: string;
        readonly DATE_END_ISO: string;
        readonly DATE_START_ISO: string;
        readonly DESCRIPTION: string;
        readonly EVENT_LIST: string;
        readonly HEADLINES: string;
        readonly HIGHLIGHT_ATTRIBUTION: string;
        readonly HIGHLIGHT: string;
        readonly IMAGES: string;
        readonly PATHS: string;
        readonly PRIMARY_SLIDE_CONTENT: string;
        readonly PRIMARY_SLIDE_LINKS: string;
        readonly PRIMARY_SLIDE_SECONDARY_LINKS: string;
        readonly QUOTE: string;
        readonly STAT: string;
        readonly STATIC_COLUMN: string;
        readonly STATS: string;
        readonly STICKY_COLUMN: string;
        readonly TABS: string;
        readonly TEXTS: string;
        readonly VIDEO: string;
        readonly actions: {
            default: string;
        };
        readonly assets: {
            image: string;
        };
        readonly content: {
            default: string;
        };
        readonly contact: {
            additional: string;
            address: string;
            email: string;
            location: string;
            phone: string;
        };
        readonly eyebrows: {
            default: string;
        };
        readonly date: {
            default: string;
        };
        readonly deprecated: {
            body: string;
            wrappingText: string;
            plainText: string;
        };
        readonly headline: {
            default: string;
        };
        readonly text: {
            caption: string;
            default: string;
            sub: string;
        };
        readonly social: {
            linkedin: string;
        };
        readonly person: {
            association: string;
            jobTitle: string;
            name: string;
            pronouns: string;
        };
    };
    readonly headline: {
        readonly default: (props: SlotProps) => HTMLElement | null;
    };
    readonly social: {
        readonly linkedin: (props: SlotProps) => HTMLElement | null;
    };
    readonly text: {
        readonly caption: (props: SlotProps) => HTMLElement | null;
        readonly default: (props: SlotProps) => HTMLElement | null;
        readonly subText: (props: SlotProps) => HTMLElement | null;
    };
};
export default _default;
export type { SlotName };
//# sourceMappingURL=index.d.ts.map